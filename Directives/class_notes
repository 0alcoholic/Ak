    - Directives Enhances the HTML Capabilities.
    - By using Directives we can manipulate the DOM.
    - DOM Stands for document Object Model
    - We Have Two Types Of Directives.

        1.Predefined Directives.
        2.Custom Directives.
Predefined Directives.
    The directives Given By The Framework Called as Predefined Directives.

Custom Directives.
    The Directives Developed By the Developer Called as Custom Directives.

    In AngularJS We can Use the Custom Directives in four ways.

    1. As an Element

    2. As an CSS Class

    3. As an Attribute

    4. As an Comment


Properties of Custom Directives

1. restrict

        - it will describes the usage of custom directive.

        restrict: "E"   // we can use like an Element

        restrict : "A"  // We Can use like an Attribute

        restrict: "C"   // We Can use like an CSS Class

        restrict: "M"   // we can use like an Comment

        restrict:"EACM"

        [Note . The Default Value of restrict is "E" ]


Ex.

   app.directive("my_directive",my_directive);

   function my_directive(){

        return{
            restrict:"E"
        }
   }
   <my_directive></my_directive>



2. template

    - used to add the inline html to custom directive.

Ex.

   app.directive("my_directive",my_directive);

   function my_directive(){
        return{
            restrict: "A",
            template:"<div class='jumbotron'>Welcome to Custom Directives !</div>"
                                  (bootstrap)
                                  (ligth grey color shade)

        }
   }


   <div class="container" my_directive></div> //Welcome to Custom Directives !


3. templateUrl
    - used to add the external templates to the custom directive.

Ex.

-------------
templates
    sample.html
-------------

sample.html
-

<h1>Welcome to Custom Directives !</h1>



app.directive("my_directive",my_directive);
function my_directive(){
    return{
        restrict:"C",
        templateUrl:"templates/sample.html"
    }
}

<div class="my_directive"></div>  //Welcome to Custom Directives !


4. controller

    - this property used to declare the controller to the template of a custom directive.

Ex.
----------
templates
    sample.html
----------
sample.html
-
<h1>{{var_one}}</h1>

-----------
controller
    sample.js
-----------
app.controller("sample",sample);
sample.$inject=["$scope"];
function sample($scope){
    $scope.var_one = "Welcome to Custom Directives !";
}

app.directive("my_directive",my_directive);
function my_directive(){
    return{
        templateUrl:"templates/sample.html",
        controller : "sample"
    }
}
<my_directive></my_directive> //Welcome to Custom Directives !


Example_2.

----------------------
templates
    header.html
----------------------

header.html
-
<div class="dropdown">
    <button class="dropdown-caret" data-toggle="dropdown">ClickMe</button>
    <ul class="dropdown-menu">
        <li>Option_1</li>
        <li>Option_2</li>
        <li>Option_3</li>
        <li>Option_4</li>
        <li ng-click="logout()">Logout</li>
    </ul>
</div>

--------------
controllers
    header.js
--------------
app.controller("header",header);
header.$inject=["$scope"];
function header($scope){
    $scope.logout = function(){
        alert("Logged Out Successfully !!!");
    }
}

----------
directives
    header.js
----------
app.directive("header",header);

function header(){
    return{
        templateUrl:"templates/header.html",
        controller : "header"
    }
}













































