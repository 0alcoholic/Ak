
- directives in angularjs enhances th html capabilities.

- we have two types of directives.

    1. predefined directives

    2. custom directives

predefined directives:

    - the directives given by the framework called as predefined directives.

1. ng-app
    - this directive called as root directive.
    - angular framework starts the execution from ng-app directive.
    - ng-app directive takes the logical name of web application
    - logical name of web application optional for "static angular applications"
    - logical name of web application mandatory for "dynamic web application"
    - we can have only one "ng-app" directive per web application

manual bootstrap:
    - executing angular application forcefully without ng-app directive called as manual bootstrap.

- the code which is out of "ng-app" directive won't executes by angular framework.


2. ng-controller

    - in angular applications we can declare the controllers ny using "ng-controller" directive.
    - we can have more than one controller per web application.
    - in genaral we will declare the controllers in view
        Ex.
            <div ng-controller="ctrl">
                //Code
            </div>
    - in general we will implement the controllers by using javascript.
        Ex.
            app.controller("ctrl" , ctrl);
            function ctrl($scope){
                //Logic
            }



3. ng-repeat
    - this directive used to iterate the list of elements from an array.
    Syntax.
        ng-repeat = "variable in array"
            {{variable}}




4.ng-options
    - this directive used to populate the data to the dropdown.
    Syntax.
        ng-options="model_values as dropdown_values for variable in array"

    Ex.
        $scope.array = [
                        {'id':1,'name':'AngularJS'},
                        {'id':2,'name':'Angular2'},
                        {'id':3,'name':'reactJS'},
                        {'id':4,'name':'NodeJS'},
                        {'id':5,'name':'mongodb'}
                        ];

                *****************
        Use Case_1:
            dropdown - sub's
            model    - id's

        <select ng-model="model_one"
                ng-options="x.id as x.sub for x in array">
            <option value="">--Choose Subject--</option>
        </select>
        <h1>{{model_one}}</h1>
                ******************

                ---------------------------
        Use Case_2:
            dropdown - id's
            model    - sub's

        <select ng-model="model_two"
                ng-options="x.sub as x.id for x in array">
            <option value="">--Select ID--</option>
        </select>
        <h1>{{model_two}}</h1>
             -------------------------------



                    ##############################
        Use Case_3:

            dropdown-sub's
            model   - sub's

        <select ng-model="model_three"
                ng-options="x.sub as x.sub for x in array">
            <option value="">Select Sub</option>
        </select>
        <h1>{{model_three}}</h1>
                ####################################


                    *********************************
        Use Case_4:

            dropdown - id's
            model    - id's
        <select ng-model="model_four"
                ng-options="x.id as x.id for x in array">
            <option value="">--Choose ID--</option>
        </select>
        <h1>{{model_four}}</h1>
                *******************************************

        Ex.

        $scope.array = ["AngularJS","Angular2","reactJS","NodeJS","mongoDB"];

        Use Case:
            dropdown - sub's
            model    - sub's
        <select ng-model="model_five"
                ng-options="x as x for x in array"></select>


5. ng-dblclick
    - when ever we double click the user interface elements, automatically angular framework will
      execute ng-dblclick directive.

Syntax.
    ng-dblclick="expression"/
                "user defined function"/
                "user defined function with parameters"



6.ng-class-odd
    - this directive used to apply the "css classes" to the "odd rows" of table.

Syntax.
    ng-class-odd="my_class"



7.ng-class-even
    - this directive used to apply the css classes to the even rows of table.

Syntax:
    ng-class-even="my_class"


8.ng-include
    - this directive used to include target template to source template.

Syntax.
    ng-include="sample.html"


9.ng-switch
    - used to write the switch cases in angular applications.

Syntax.
    <div ng-switch="expression">
        <div ng-switch-when="value_one">
            //Code
        </div>

        <div ng-switch-when="value_two">
            //Code
        </div>
            --
            --
            --
        <div ng-switch-default>
            //Code
        </div>
    </div>

10. ng-submit:
        - this directive used to submit the whole form at a time to the controller.

Syntax:
        <form ng-submit="login()">

            //Form Elements

            <input type="submit"></input>
        </form>

[Note : when ever we click the submit button automatically login() will
        execute in controller]


11. MouseEvents:


    ng-mousedown/
    ng-mouseup


    ng-mouseenter/
    ng-mouseleave
                        "Expression" /
                        "user defined function" /
                        "user defined function with optional parameters"

    ng-mouseover/
    ng-mouseout


    ng-mousemove


12. ng-cloak:

        - this directive used to avoid the flickering of webpage while
          refreshing with expressions

-----------
ngCloakDemo
    index.html
    app.js
    controllers
        ctrl_one.js
        ctrl_two.js
------------






















