Directives.
    - Directives in AngularJS Enhances the HTML Capabilities.

    - we have two types of directives.

    1.Predefined Directives.

        - The Directives Given by the Framework called as Predefined Directives.

        1. ng-app

            - it is a root directive in Angular Application.

            - we can give the logical name for the web application by using ng-app directive.

            - if our application is static ,

               then logical name is optional otherwise mandatory(Dynamic App).

            - we can take only one ng-app directive per web application.

       Autobootstrap.

            Framework starts the execution from ng-app directive , this process

            called as Autobootstrap.


       Manual Bootstrap.

            Running the Angular Application forcefully without ng-app directive

            called as Manual Bootstrap.

ngAppDemo_1.html
-
<!DOCTYPE html>
<html>
    <div ng-app>
        <h1 style="color:red">Addition.{{10+10}}</h1>
         <div>
            <h1 style="color:green">Subtraction.{{20-10}}</h1>
         </div>
    </div>

    <br><br>
    <div>
        <h1 style="color:blue">Multiplication.{{10*10}}</h1>
    </div>
    <script src="bower_components/angular/angular.min.js"></script>
</html>
O/P:
    Addition . 20

    Subtraction . 10

    Multiplication . {{10*10}}


ngAppDemo_2.html
-

<!DOCTYPE html>
<html>
       <h1 style="color:red">Addition.{{10+10}}</h1>
       <h1 style="color:green">Subtraction.{{20-10}}</h1>
       <h1 style="color:blue">Multiplication.{{10*10}}</h1>
       <script src="bower_components/angular/angular.min.js"></script>
       <script>
            angular.bootstrap(document);
       </script>
</html>

O/P.

    Addition . 20
    Subtraction . 10
    Multiplication .100

ngAppDemo_3.html
-
<!DOCTYPE html>
<html>
    <div ng-controller="ctrl">
        <h1 style="color:red">{{var_one}}</h1>
    </div>
    <script src="bower_components/angular/angular.min.js"></script>
    <script>
        var app = angular.module("app",[]);
        app.controller("ctrl",ctrl);
        ctrl.$inject=["$scope"];
        function ctrl($scope){
             $scope.var_one =  "I am from Manual Bootstrap";
        }
        angular.bootstrap(document,["app"]);
    </script>
</html>


ngAppDemo_4.html
-

<div ng-app="app" ng-controller="ctrl_one">
    <h1 style="color:red">{{var_one}}</h1>
</div>

<div ng-controller="ctrl_two" id="my_div">
    <h1 style="color:green">{{var_two}}</h1>
</div>


var my_div= document.getElementById("my_div");
angular.bootstrap(my_div,["app"]);

2.ng-controller.

    - used to declare the controllers in view.

    - we can more than one controller per web application.

    - In genaral we will declare controllers in HTML.

        Ex.
            ng-controller="ctrl"

    - In genaral we will implement controllers in javascript.

        Ex.
            app.controller("ctrl",ctrl);

            ctrl.$inject = ["$scope"];

            function ctrl($scope){

                //Logic Goes Here
            }


ngControllerDemo_1.

    - Implement the three controllers with the given names.

    1.ctrl_one

    2.ctrl_two

    3.ctrl_three

    - "ctrl_one" should initilise the "var_one" with
       "Data from MongoDB Soon..."

    - "ctrl_two" should initilise the "var_two" with
       "Data from MySQL DB Soon..."

    - "ctrl_three" should initilise the "var_three" with
       "Data From Cassandra DB Soon.."


ngControllerDemo_2
-

1.Create two controllers with the given names.

    1.ctrl_one
    2.ctrl_two

2.initilize the "var_one" by using "ctrl_one" with "I am from ctrl_one"

3.initilize the "var_two" by using "ctrl_two" with "I am from ctrl_two"

4.make the availability of "var_one" & "var_two" to the web page scope.


ngControllerDemo_3.

    1. Create one controller with the following name.

        "ctrl"

    2. create one global function with the name.

        "my_fun()"

    3. my_fun() should return local variables.

        1. $scope.var_one="AngularJS";
        2. $scope.var_two="Angular2";
        3. $scope.var_three="Angular3";


ngControllerDemo_4.

    1.Create three controller with parent & child relation.
        - parent_controller
        - child_controller
        - sub_controller

    2. initilize the "parent" variable by using "parent_controller"
       initilize the "child" variable by using "child_controller"
       initilize the "sub" variable by using "sub_controller"

    3. create the css class with the following name.
        "my_class"








