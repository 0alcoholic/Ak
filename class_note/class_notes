1.Introduction

    What is AngularJS.
    Why AngularJS.

2.Environmental Setup

    1. bower
    2.GitHub
    3.IDE'S - WebStrom , Visual Studio , Ecilipse


3. Angular Applications

    1.Static Angular Application
    2.Dynamic Angular Application

4. Directives.

    1.Predefined Directives.

        1.ng-app            2.ng-controller

        3.ng-repeat         4.ng-click

        5.ng-model          6.ng-bind

        7.ng-submit         8.ng-options


    2. Custom Directives


5. Services

    1. Predefined Services

    2. Custom Services


6. Single Page Applications


7. NodeJS

        - AngularJS -- NodeJS  -- MySQL

        - AngularJS -- NodeJS  -- MongoDB

Introduction.
-

    AngularJS is the Client Side JavaScript Framework.

    AngularJS Follows the MVC Design Pattern.

        M - Model

        V - View

        C - Controller

    - AngularJS Framework have a so many predefined Modules ,  As a Angular Developer we can reuse
      the Predefined Modules.

        1.ngAnimate.

                - This Module used to Develop the Animations in Angular Applications.

        2.ngMessages

                - This Module used to perform the client side form validations.

        3.ngStorage

                - This Module used to Work With the Storages.

                - We Have Two Types Of Storages.

                        1.localStorage

                        2.sessionStorage

        4.ngRoute

                - Loading the Target Web Pages to Source Web Pages Called as Routing.

                - By using "ngRoute" Module we can Achieve Routing in Single Page Applications.

                - Now a days no body using ngRoute Module because of it's limitations.

        5.ui.router

            - it is a 3rd party module used to Achieve the Routings in SPA.
            - now a days all most all the projects are using ui.router module because of it's advantages.

   Ex.
        Develop Sample Angular Application with the Following Features.

            1. Animations Support
            2. Validations Support
            3.Routing with 3rd party Module
            4.Storages Support

        index.html
        -
        <html ng-app="app">



            <script src = "https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

            <script>
                var app = angular.module("app",["ngAnimate","ngMessages","ui.router","ngStorage"]);
            </script>
        </html>


bower.

    bower is the Automation tool used to download the Required Resources to develop web application.

    bower is the Automation tool Given by the NodeJS.


bower components.


1.bower.json

Ex.

{


    "name":"nareshit",

    "dependencies":{
        "angular":"~1.6.0",
        "bootstrap":"~3.3.6"
    }

}


2. .bowerrc

    used to tell the path to the resources downloading by using bower.

{
    "directory":"bower_components"
}



> bower install


Angular Applications.

    - By using AngularJS We Can create Two Types of Angular Applications.

    1.Static Angular Application.

    2.Dynamic Angular Application.


Static Angular Application.

    - If View Won't Interacts with the Controller For Dynamic Data Then Such Type Of Angular Application

      Called as Static Angular Application.


Dynamic Angular Application.

    - If View Interacts with the Controller For Dynamic Data Then Such Type Of Angular Application
      Called as Dynamic Angular Application.


Steps to Create the Static Angular Application.

Step 1.
    Download the Angular Framework by using bower.


Step 2.
    Create the View.


Steps to Create the Dynamic Angular Application.
-


Step 1.
    Download Angular By using bower.

Step 2.
    Load the Angular Framework

Step 3.
    Create the Logical name for the Web Application

Step 4.
    Declare the Controller by using "ng-controller" directive.

Step 5.
    Instantiate the Module.

Step 6.
    Implement the Controller.

















































