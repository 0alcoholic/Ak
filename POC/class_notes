Project Implementation:
-----------------------
1. create the following table in mysql database.

----------------
database : poc
table    : login_details
-----------------

>create schema poc;
>use poc;
>create table login_details(uname varchar(20),upwd varchar(20))
>insert into login_details values('admin','admin');



2. create the server

server.js
---------

var jwt = require(jwt-simple);

var connection = mysql.createConnection({
    host:"localhost",
    user:"root",
    password:"root",
    database:"poc"
});

connection.connect();

app.post("/login",function(req,res){
    //read post parameters from req object.
    var uname = req.body.uname;
    var upwd = req.body.upwd;

    connection.query("select uname from login_deatils where
                        uname='"+uname+"'",

                function(err,recordsArray,fields){

        if(recordsArray.length>0){
            var token = jwt.encode({'uname':uname},'hr@nareshit.in');
            res.send({'login':'success','token':token});
        }else{
            res.send({'login':'fail'});
        }
    });
});




3.create loginService

app.service("loginService",loginService);
function loginService($http){
 this.authenticate = function(obj){
        return $http.post("http://localhost:8080/login",obj)
                .then(function(posRes){
            return posRes;
        },function(errRes){
            return errRes;
        });
    }
}



4. Implement the Single Page Application


    ************************
POC
    templates
        login.html
        home.html

    controllers
        loginController.js
        homeController.js

    app.js

    config.js

    index.html

    bower.json
        ********************



5. store the response into localStorage.

app.controller("loginController",loginController);
function loginController($scope,loginService,$localStorage,
                                            $location) {
    $scope.obj={};
    $scope.login_details = function () {
        loginService.authenticate($scope.obj).then(function (res) {
           if(res.data.login == "success"){
               $localStorage.poc = res;
               $location.path("/home");
           }else{
               alert("Invalid Details !");
           }
        });
    };
};



----------------------
Home Module

1. create the static json file (sample.json),
                          mysql table(products),
                          mongodb collection(products)




sample.json
-----------
{
    "products":[
                    {"p_id":111,"p_name":"p_one","p_cost":10000},
                    {"p_id":222,"p_name":"p_two","p_cost":20000},
                    {"p_id":333,"p_name":"p_three","p_cost":30000},
                    {"p_id":444,"p_name":"p_four","p_cost":40000},
                    {"p_id":555,"p_name":"p_five","p_cost":50000}
    ]
}


mysql:
-----
>use poc;
>create table products(p_id integer,p_name varchar(20),p_cost integer);
>insert into products values(111,'p_one',10000);
>insert into products values(222,'p_two',20000);
>insert into products values(333,'p_three',30000);
>insert into products values(444,'p_four',40000);



mongodb:
--------
>use poc;
>db.createCollection("products");
>db.products.insert({"p_id":111,"p_name":"p_one","p_cost":10000});
>db.products.insert({"p_id":222,"p_name":"p_two","p_cost":20000});
>db.products.insert({"p_id":333,"p_name":"p_three","p_cost":30000});




2. create the node services (post services)

app.post("/about",function(req,res){
    var token = req.body.token;
    if(tokensArray[0] == token){
        fs.readFile(__dirname+"/sample.json",function(err,data){
            res.send(data);
        });
    }else{
        res.send({'401':'Authentication Failed !'});
    }
});


app.post("/portfolio",function(req,res){
    var token = req.body.token;
    if(tokensArray[0] == token){
        connection.query("select * from products",
                    function(err,recordsArray,fields){
            res.send(recordsArray);
        });
    }else{
        res.send({'401':'Authentication Failed !'});
    }
});


app.post("/contact",function(req,res){
    var token = req.body.token;
    if(tokensArray[0] == token){
        nareshIT.connect("mongodb://localhost:27017/poc",
                            function(err,db){
            db.collection("products").find().toArray(
                            function(err,array){
                res.send(array);
            });
        });
    }else{
        res.send({'401':'Authentication Failed !'});
    }
});


3. create the homeService.js


app.service("homeService",homeService);
function homeService($http,$localStorage){
    this.aboutData = function(){
        return $http.post("http://localhost:8080/about",
                            {'token':$localStorage.poc.data.token})
                            .then(function(posRes){
              return posRes;
        },function(errRes){
              return errRes;
        });
    }
}


4. create the controllers

--------------
aboutController.js
portfolioController.js
contactController.js
--------------


aboutController.js
-
app.controller("aboutController",aboutController);
function aboutController($scope,homeService){
    homeService.aboutData().then(function(res){
        $scope.about = res;
    });
};



5. create the templates

---------
templates
    about.html
    portfolio.html
    contact.html
----------


6. implement the nested routing








