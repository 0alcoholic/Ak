Directives.
    - Directives in angularjs enhances the HTML Capabilities.

    - we have two types of directives.

        1.predefined directives
        2.custom directives


predefined directives:

    - the directives given  by the framework called as predefined directives.

1. ng-app

    - angular framework starts the execution from ng-app directive.

    - ng-app directive takes the logical name of web application.

    - logical name of web application optional for "static web applications"

    - logical name of web application is mandatory for "dynamic web applications"

    - we can have only one ng-app directive per web application.

Manual Bootstrap:
    - executing the angular application forcefully with out "ng-app" called as Manual Bootstrap.


2. ng-repeat

    - this directive used to iterate the list of elements from an array

Syntax.

    ng-repeat = "iteration_variable in array"
        {{iteration_variable}}



4. ng-show
    - ng-show directive will show / hide the HTML Elements from DOM Dynamically.
    - ng-show won't works with the HTML DOM Directly.

Syntax.

        ng-show = "true" / "false"


5. ng-hide

       - it will show / hide the HTML Elements Based On Condition
       - ng-hide won't works with the HTML DOM Directly


Syntax.
       ng-hide="true" / "false"
        //true - hide
        //false - show




6. ng-init

    - this directive used to inilize the variables in configuration phase.

    - ng-init variables available in application scope.


    Syntax.
        ng-init = "db_user='root';
                  "db_password='root'"


    [Note : db_user & db_password available in application scope]


7. ng-switch

        - this directive used to write the switch cases in angular applications.


Syntax.

    <div ng-switch="expression">
        <div ng-switch-when="value1">
            //Code
        </div>

        <div ng-switch-when="value2">
            //Code
        </div>

        <div ng-switch-when="value3">
            //Code
        </div>

        <div ng-switch-default>
           //Code
        </div>
    </div>


8. ng-options:
    - this directive used to populate the values to the dropdown.

Syntax.

    ng-options="model_value as
                dropdown_values for
                variable in
                array"


Ex.

    $scope.array = [{'id':1,'sub':'AngularJS'},
                    {'id':2,'sub':'Kotlin'},
                    {'id':3, 'sub':'reactJS'},
                    {'id':4,'sub':'NodeJS'},
                    {'id':5,'sub':'MongoDB'}];


    //dropdown - sub
    //model - id's
    <select ng-model="model_one" ng-options="x.id as x.sub for x in array">


    //dropdown - id's
    //model - sub
    <select ng-model="model_two" ng-options="x.sub as x.id for x in array">

    //dropdown - sub
    //model - sub
    <select ng-model="model_three" ng-options="x.sub as x.sub for x in array">

    //dropdown - id's
    //model - id's
    <select ng-model="model_four" ng-options="x.id as x.id for x in array">


    $scope.data = ["AngularJS","Angular2","reactJS","Kotlin","Cassandra"];
    //dropdown - sub's
    //model - sub's
    <select ng-model="model_five" ng-options="x as x for x in data">

ng-click
--------
    - when ever we click the user interface elements, automatically ng-click directive
      executed by angular framework.

Syntax.

      ng-click = "Expression" /

                 "user defined function" /

                 "user defined function with arguments".

Ex.

       ng-click="count=count+1"

       ng-click="login()"

       ng-click="login(uname,upwd)"



ng-controller:
    - this directive used to declare the controllers.
    - we may have more than one controller per web application.
    - in general we will declare controllers in view.
        Ex.
            ng-controller = "ctrl"

    - in general we will implement controllers in javascript.
        Ex.
            app.controller("ctrl",ctrl);
            function ctrl($scope){
                //Business Logic
            }



ng-dblclick:
    - when ever we double click the user interface elements , automatically ng-dblclick directive
      will be executed by angular framework

Syntax.

    ng-dblclick = "Expression" /
                  "user defined function" /
                  "user defined function with parameters"



















