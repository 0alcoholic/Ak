Single Page Applications:

    - loading one template to another template without refreshing the whole web page called as
      single page application.

    - loading one template to another template in single page application called as routing.

    - we can implement the routing in single page application by using following modules

        1. ngRoute
        2. ui.router

Steps to implement the single page application by using ngRoute module:
----------------------------------------------------------------------

Step 1:
    download the ngRoute module by using bower.

bower.json
----------
{
    "name":"nareshit",
    "dependencies":{
        "angular":"~1.5.0",
        "angular-route":"~1.5.0"
    }
}

[Note : "angular-route" is the bower key used to download the "ngRoute" module dependency file]


Step 2:
    add the ngRoute module dependency.

app.js
------
var app = angular.module("app",["ngRoute"]);

Step 3:
    create the target templates

--------------
templates
    page_one.html
    page_two.html
--------------

page_one.html
-
<h1>{{var_one}}</h1>

page_two.html
-
<h1>{{var_two}}</h1>


Step 4:
    create the target controllers.

----------------
controllers
    page_one.js
    page_two.js
----------------
page_one.js
-
app.controller("page_one",page_one);
function page_one($scope){
    $scope.var_one = "I am from page one controller !";
}

page_two.js
-
app.controller("page_two",page_two);
function page_two($scope){
    $scope.var_two = "I am from page two controller !";
}



Step 5:
    Implement the Mapping

Rules:

1. mapping should done in config phase.

Ex.
    app.config(config);
    function config($routeProvider){
        //mapping implementation
    }

Note : $routeProvider is the predefined object used to implement the mapping in single page
       application.



2. mapping should be "key&value" pairs.


config.js
---------
app.config(config);
function config($routeProvider){
    $routeProvider.when("/page_one",{templateUrl:"templates/page_one.html",controller:"page_one"})
                  .when("/page_two",{templateUrl:"templates/page_two.html",controller:"page_two"})
                  .otherwise("/page_one",{templateUrl:"templates/page_one.html",controller:"page_one"});;
}




Step 6:
    implement the source template

index.html
----------
<html ng-app="app">
    <a href="#page_one">Page_One</a>
    <a href="#page_two">Page_Two</a>
    <div ng-view></div>
</html>


Passing the URL Parameters by using ngRoute Module:
---------------------------------------------------

index.html
----------
<a href="#page_one/111/emp_1/50000">Page_One</a>

config.js
---------
$routeProvider.when("/page_one/:param1/:param2/:param3" ,
                {templateUrl:"templates/page_one.html",controller:"page_one"});

page_one.js
-----------
app.controller("page_one",page_one);
function page_one($scope,$routeParams){
    console.log($routeParams.param1);
    console.log($routeParams.param2);
    console.log($routeParams.param3);
}






