Single Page Applications.

    - Loading the Target Web page to Source Webpage With out Refreshing the Whole Page Page Called as Single Page Application.

    - Loading the Target Webpage to Source Webpage Called as Routing in Single Page Application.

    - in AngularJS , we can achieve the Routing by using 2 modules.

        1. ngRoute

        2. ui.router


Steps to Design the Single Page Application by using ngRoute Module.


Step 1.
    Download ngRoute Module by using bower.

Step 2.
    Add the ngRoute Module Dependency.

Step 3.
    Create the Target Templates

Step 4.
    Create the Controllers

Step 5.
    Do the Mapping

Step 6.
    Source Template(index.html)



URL Parameters by using ngRoute Module.
-

index.html
-
<a href="#page_one/1/Hello/20">Page_One</a>


config.js
-
$routeProvider.when("/page_one/:id/:name/:age" , {
    templateUrl:"templates/page_one.html",
    controller : "page_one"
});


page_one.js
-

app.controller("page_one",page_one);
page_one.$inject=["$scope","$routeParams"];
function page_one($scope,$routeParams){
    $scope.var_one = $routeParams.id+"...."+$routeParams.name+"..."+$routeParams.age;
}




ui.router module
-


    - by using ui.router module we can create the Nested Routing Applications

    - by using ui.router module we can create Named Views Applications

    - we can pass JSON Objects as URL Parameters

    - ui.router module is the 3rd party Module.


Steps to design the Single page Application by using ui.router module.
-

Step 1.
    Download ui.router Module by using bower.

Step 2.
    Add the ui.router Module Dependency.

Step 3.
    Create the Target Templates

Step 4.
    Create the Controllers

Step 5.
    Do the Mapping

Step 6.
    Source Template(index.html)










