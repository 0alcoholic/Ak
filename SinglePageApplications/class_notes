
    - Loading the Target WebPages to Source Webpage without Refreshing the Whole Webpage called as
      Single Page Application.

    - Loading the Target Pages to Source Page Called as Routing.

    - We Can Achieve the Routing in Single Page Application By using Following Modules.

        1.ngRoute
        2.ui.router

Steps to Design the Single Page Application by using ngRoute Module.
-

Step 1.

      Download ngRoute module by using bower.

bower.json
-
{
    "name":"nareshit",
    "dependencies":{
        "angular":"~1.5.0",
        "angular-route":"~1.5.0"
    }
}

.bowerrc.json
-
{
    "directory":"bower_components"
}


Step 2.
    Add the ngRoute Depenedency.

app.js
-
var app = angular.module("app",["ngRoute"]);


Step 3.
    Create the Target Templates

-------------
Basic_ngRoute
    templates
        page_one.html
        page_two.html
--------------

page_one.html
-
<h1>{{var_one}}</h1>


page_two.html
-
<h1>{{var_two}}</h1>


Step 4.
    Create the Controllers.

-----------
controllers
        page_one.js
        page_two.js
-----------
page_one.js
-
$scope.var_one = "Data From NodeJS Soon....";

page_two.js
-
$scope.var_two = "Data From MongoDB Soon....";


Step 5.
    Done the Mapping.

config.js
-

app.config(config);
config.$inject=["$routeProvider"];
function config($routeProvider){

    $routeProvider

    .when("/page_one",{
        templateUrl:"templates/page_one.html",
        controller:"page_one"
    })

    .when("/page_two",{
            templateUrl:"templates/page_two.html",
            controller:"page_two"
    })

    .otherwise("/page_one",{
            templateUrl:"templates/page_one.html",
            controller:"page_one"
    });
}


Step 6.

    Create the Source Template.

index.html
-

<a href="#page_one">Page_One</a>
<a href="#page_two">Page_Two</a>

<div ng-view></div>


































