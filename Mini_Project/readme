Technologies.
1.Single Page Applications (ui.router)
2.localStorage
3.Bootstrap
4.jQuery
5.Node Server
6.MySQL / MongoDB / Cassandra / SQL Server
7.Interceptors
8.Token Based Authentication System
9.Grunt
10.JBOSS / Tomcat / Weblogic / IIS
11.TestCases


Modules in Mini_Project.

1.login

2.register

3.home
    login.
           - login module will compare the user credentials

              in mysql database with node server.

    register.
           - register module will save the user information in mysql

             with node server.

     home.

            - will interacts with the end user and performs the Required
              Opearations with Node / Tomcat / IIS with MySQL / MongoDB/ Cassandra


Step 1.

    Implement the SPA by using ui.router module.

----------------
templates
    login.html
    home.html
    register.html
----------------

----------------------------
controllers
    loginController.js
    homeController.JS
    registerController.js
-----------------------------



Step 2.

    Implement the login.html --->  register.html

                  register.html --->  login.html

login.html
-

    --
    --
    --

    <a ui-sref="register">Register?</a>



register.html
-

    ---
    ---
    ---

    <a ui-sref="login">Login</a>




Step 3.

    Pass the Data From loginController to loginService.

    "data"  --- > u_name : uname  && u_pwd:upwd

------------
services
    loginService.js
------------
app.service("loginService",loginService);
loginService.$inject=["$http"];
function loginService($http){
    this.authenicate = function(data){
        console.log(data);
    };
};


app.controller("loginController",loginController);
loginController.$inject=["$scope","loginService"];
function loginController($scope,loginService){
    loginService.authenicate(data);
}



Step 4.
    Pass the user credentials to the Server
    a. Launch the index.html file By using NodeJS.

    b.create post url to accept the user credentials from loginService

    c.create the "user_details" table in "mini_project" schema in mysql

        schema : mini_project
        table : user_details


        > create schema mini_project;
        > use mini_project;
        > create table user_details(uname varchar(50),
                                    fname varchar(50),
                                    lname varchar(50),
                                    pwd varchar(20),
                                    phone varchar(50),
                                    profile_pic varchar(50),
                                    gender varchar(20),
                                    address varchar(100)
                                    );
        > insert into user_details values('admin',
                                          'Naresh',
                                          'IT',
                                          'admin',
                                          '123456',
                                          'c:\images\logo.png',
                                          'male',
                                          'Ameerpet');


        d. create the connection object in nodejs.

            > npm install mysql --save

            var mysql = require("mysql");
            var connection = mysql.createConnection({
                host:'localhost',
                user:'root',
                password:'root',
                database:'mini_project'
            });
            connection.connect();

        e.compare the "user credentials" with "user_details" table.

        //create the post url.
        app.post("/login/authenicate",function(req,res){
            var uname = req.body.u_name;
            connection.query("select uname from user_details where uname='"+uname+"'",
            function (err,records,fields) {
                if(records.length>0){
                    res.send({login:"success"});
                }else{
                    res.send({login:"failure"});
                };
            });
        });

