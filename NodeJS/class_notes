NodeJS:
-------
    -  NodeJS is a Server Side Scripting Language.

    - By using NodeJS, we can implement the http & tcp servers.

    - As a Node Developer we can assign the port number to Servers.

    - Node will support Modules.(Predefined & Custom Modules)

Modules in NodeJS
-----------------
1. express
    - this module used to develop the REST API.

2. mysql
    - used to interact with the mysql database.

3. mongodb
    - used to interact with the mongodb.

4. fs
    - this module used to interact with the flat files.
    Ex.
        JSON Files
        XML Files
        Text Files
            --
            --
            --
5. body-parser
    - this module used to set the MIME Type.
Ex.
    json
    xml
    text
    --
    --
    --

6. query-string
    - this module used to implement the ORM.


7. jwt-simple
    - this module used to maintain the token based authentication system.


8. multer
    - this module used to handle the multimedia images.

9. http
    - this module used to create the http servers.


[Note : we can download required modules with the help of "package.json" file]

[Note : we can install the package.json file by using following command
        >npm install
]

[Note: we can start the server by using following command
    >npm start
]

Ex_1:
    launch the angular application by using node server



Step 1:
        download express module by using package.json file.

package.json
------------
{
    "name":"nareshit",
    "version":"1.0.0",
    "dependencies":{
        "express":"latest"
    }
}


Step 2:
    install the package.json file by using following command

>npm install


Step 3:
    create the Application Directory Structure

---------------------
Basic_NodeEx
    package.json   (Node Configuration File)

    index.html     (Angular Application)

    server.js      (Node Application)
--------------------


Step 4:
    create the node application

server.js
---------

//import express module
var express = require("express");

//create the deployment interface (Node Server Instance)
var app = express();


//Deploy the Client Application.
app.use(express.static("D:/AJS_Classes/NodeJS/Basic_NodeEx"));


//assign the port no.
app.listen(8080);
console.log("Server Listening the port no.8080");



Step 5:
    start the node server by using following command
> npm start


Step 6:
    launch the application with the foloowing URL:

http://localhost:8080/





Ex_2:
    Reading the Data From Static Files

sample.json
-----------
{
    "products":[
        {"p_id":111,"p_name":"p_one","p_cost":10000},
        {"p_id":222,"p_name":"p_two","p_cost":20000},
        {"p_id":333,"p_name":"p_three","p_cost":30000},
        {"p_id":444,"p_name":"p_four","p_cost":40000},
        {"p_id":555,"p_name":"p_five","p_cost":50000}
    ]
}

var express = require("express");
var fs = require("fs");
var app = express();
app.use(express.static(__dirname+"/../Read_StaticData"));
//create the REST API (get request)
app.get("/products",function(req,res){
    fs.readFile(__dirname+"/sample.json",
                function(err,data){
        res.send(data);
    });
});



Ex_3:
    Reading the Data From MySQL DataBase

Create the Schema
-----------------
>create schema test;

Switch to Schema
----------------
>use test;

create table
------------
>create table products(p_id integer,p_name varchar(20),p_cost integer);

insert the data
---------------
>insert into products values(111,'p_one',10000);

query the table
---------------
>select * from products;



var express = require("express");
var mysql = require("mysql");
var app = express();
app.use(express.static(__dirname+"/../Read_MySQLData"));

//create the connection object
var connection = mysql.createConnection({
    host:"localhost",
    user:"root",
    password:"root",
    database:"test"
});


//connect to database.
connection.connect();


//REST API
app.get("/products",function(req,res){
    connection.query("select * from products",
            function(err,recordsArray,fields){
        res.send(recordsArray);
    });
});


Ex_4:
    Interacting with the MongoDB
    ----------------------------

- MongoDB is ligth weigth Data Base compared to Traditional DataBases like
  Oracle,MySQL,....

- MongoDB Follows Client Server Architecture.

- MongoDB Supports JSON.

- As a MongoDB Developer we can perform the CRUD Operations on JSON.


Installation Of MongoDB
-----------------------

1. download the software.

    website : https://www.mongodb.com/
    file name : mongodb-win32-x86_64-2008plus-ssl-3.4.7-signed.msi


2. create the following folder structure in c drive.

    C:/data/db


3. set the path environmental variable

    path = C:\Program Files\MongoDB\Server\3.4\bin

MongoDB Queries:
----------------

1. start the server
>mongod

2. connect to server
>mongo

3. create and switch to database
>use test;
[Note : automatically test database will be created and switched to database]

4.create the collection.
>db.createCollection("products");

5.insert data into collection
>db.products.insert({'p_id':1,'p_name':'p_one','p_cost':10000});

6.query the collection
>db.products.find();
















































































































